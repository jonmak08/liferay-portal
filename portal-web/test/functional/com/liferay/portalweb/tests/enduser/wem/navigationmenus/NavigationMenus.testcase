@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Navigation";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "5"
	test AddNavigationMenuEntriesAllTypes {
		property portal.acceptance = "true";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name"
		);

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Name 1");

		NavigationMenusAdmin.addItem(item = "Page", pageNames = "Test Page Name");

		NavigationMenusAdmin.viewItem(itemName = "Test Page Name");

		NavigationMenusAdmin.addItem(item = "Submenu", submenuName = "Submenu Name");

		NavigationMenusAdmin.viewItem(itemName = "Submenu Name");

		NavigationMenusAdmin.addItem(
			item = "URL",
			url = "https://www.liferay.com/",
			urlName = "Liferay"
		);

		NavigationMenusAdmin.viewItem(itemName = "Liferay");
	}

	@description = "This is a test for LPS-87134. We assert that navigation menus are not automatically created, even if a page is created."
	@priority = "3"
	test AssertNavigationMenuNotCreatedByDefault {
		// Create a public and private page

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name"
		);

		JSONLayout.addPrivateLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name"
		);

		// Assert navigation menu not created

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no navigation menus."
		);
	}

	@priority = "4"
	test ConfigurePrimaryNavigationMenu {
		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 2");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.configureMenuType(
			menuType = "Primary Navigation",
			navigationMenu = "Navigation Menu Name 1"
		);

		NavigationMenusAdmin.viewMenuType(
			menuType = "Primary Navigation",
			rowEntry = "Navigation Menu Name 1"
		);

		NavigationMenusAdmin.configureMenuType(
			menuType = "Primary Navigation",
			navigationMenu = "Navigation Menu Name 2",
			oldPrimaryNavigationMenu = "Navigation Menu Name 1"
		);

		NavigationMenusAdmin.viewMenuType(
			menuType = "Primary Navigation",
			rowEntry = "Navigation Menu Name 2"
		);
	}

	@priority = "4"
	test ConfigureSecondaryNavigationMenu {
		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 2");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.configureMenuType(
			menuType = "Secondary Navigation",
			navigationMenu = "Navigation Menu Name 2"
		);

		NavigationMenusAdmin.viewMenuType(
			menuType = "Secondary Navigation",
			rowEntry = "Navigation Menu Name 2"
		);
	}

	@priority = "4"
	test ConfigureSocialNavigationMenu {
		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 2");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.configureMenuType(
			menuType = "Social Navigation",
			navigationMenu = "Navigation Menu Name 2"
		);

		NavigationMenusAdmin.viewMenuType(
			menuType = "Social Navigation",
			rowEntry = "Navigation Menu Name 2"
		);
	}

	@priority = "5"
	test DeleteNavigationMenu {
		property portal.acceptance = "true";

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.delete(menuItem = "Delete", rowEntry = "Navigation Menu Name 1");

		LexiconEntry.viewNoEntry(rowEntry = "Navigation Menu Name 1");
	}

	@priority = "5"
	test RenameNavigationMenu {
		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Rename",
			rowEntry = "Navigation Menu Name 1"
		);

		PortletEntry.inputName(name = "Navigation Menu Name 1 Edit");

		Modal.save();

		LexiconEntry.viewEntryName(rowEntry = "Navigation Menu Name 1 Edit");
	}

	@description = "This is a test for LPS-87134. We assert that the option to automatically add new pages to a navigation menu works as expected."
	@priority = "5"
	test ToggleAutomaticallyAddNewPagesToNavigationMenu {
		// Create navigation menus and enable option to add new pages to navigation menu

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Single");

		NavigationMenusAdmin.toggleAutomaticallyAddNewPagesToMenu(
			toggleValue = "enable"
		);

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Both");

		NavigationMenusAdmin.toggleAutomaticallyAddNewPagesToMenu(
			toggleValue = "enable"
		);

		// Create two pages and add one page to single navigation menu and both pages to both navigation menu

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.addPublicPage(
			navigationMenus = "Navigation Menu Single,Navigation Menu Both",
			pageName = "Page 1"
		);

		SitePages.addPublicPage(
			navigationMenus = "Navigation Menu Both",
			pageName = "Page 2"
		);

		// Assert only one page is in the Single navigation menu

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Single");

		NavigationMenusAdmin.viewItem(itemName = "Page 1");

		NavigationMenusAdmin.viewNoItem(itemName = "Page 2");

		// Assert both pages are in the Both navigation menu

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Both");

		NavigationMenusAdmin.viewItem(itemName = "Page 1");

		NavigationMenusAdmin.viewItem(itemName = "Page 2");

		// Disable option to add new pages to navigation menu

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Single");

		NavigationMenusAdmin.toggleAutomaticallyAddNewPagesToMenu(
			toggleValue = "disable"
		);

		// Assert Checkbox to add new pages to navigation menu is not present

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.addPublicPage(
			assertCheckboxMissing = "true",
			navigationMenus = "Navigation Menu Single",
			pageName = "Page 3"
		);

		// Assert Page did not get added to navigation menu

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Single");

		NavigationMenusAdmin.viewNoItem(itemName = "Page 3");
	}

	@description = "This is a use case for LPS-67191."
	@priority = "5"
	test ViewNavigationMenuPropertiesSidebar {
		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Name 1");

		NavigationMenusAdmin.addItem(
			item = "URL",
			url = "https://www.liferay.com/",
			urlName = "Liferay"
		);

		NavigationMenusAdmin.viewItem(itemName = "Liferay");

		NavigationMenusAdmin.openItemSidebar(itemName = "Liferay");
	}

	@description = "This is a test case for LPS-77912."
	@priority = "4"
	test ViewSuccessMessageAfterAddingMenuItem {
		property portal.acceptance = "true";

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.addPublicPage(pageName = "Test Page Name");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		NavigationMenusAdmin.addMenu(menuName = "Navigation Menu Name 1");

		NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoEntry(rowEntry = "Navigation Menu Name 1");

		NavigationMenusAdmin.addItem(item = "Page", pageNames = "Test Page Name");

		Alert.viewSuccessMessage();
	}
}